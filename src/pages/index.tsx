import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { signIn, signOut, getSession, useSession } from "next-auth/react";
import { EventHandler, FormEventHandler, useState } from "react";
import { api } from "../utils/api";
import { redirect } from "next/dist/server/api-utils";
import { ToastContainer, toast } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';
import { useRouter } from "next/router";

const Home: NextPage = () => {
  const {data: passwordData} = api.admin.getPassword.useQuery();

  return (
    <>
      <Head>
        <title>Book Management</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <h1 id="center" className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
            Bletsch <span className="text-[hsl(280,100%,70%)]">Book</span> Boys
          </h1>
          <div className="flex flex-col items-center gap-2">
             <AuthShowcase></AuthShowcase>
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;

export function AuthShowcase(){
  const [password, setPassword] = useState('')
  const [username, setUsername] = useState('')
  const router = useRouter();
  const sessionData = useSession();

  const handleSubmit: FormEventHandler<HTMLFormElement> = async (e)=>{
      e.preventDefault()
      const res = await signIn("credentials",
      { callbackUrl: '/dashboard', username:username , password: password, redirect: false})
      if(res.ok){
        router.push('/dashboard')
      }
      else{
        toast.warning(res.error)
      }
  }
  
  
    return (
      sessionData.status==='authenticated' ? 
    <div className="flex flex-col p-8">
      <label className="h2 justify-center block text-sm font-medium text-white text-center">
                    You are currently signed in!
                  </label>
                  <div className="flex flex-row p-4 gap-4" >
                    <button type="submit" value="Dashboard" onClick={()=>router.push('/dashboard')} className="text-center w-50 flex rounded-md border border-transparent bg-indigo-600 py-2 px-4 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2">Dashboard</button>
                    <button type="submit" value="Sign Out" onClick={async ()=>await signOut()} className="text-center w-50 flex rounded-md border border-transparent bg-indigo-600 py-2 px-4 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2">Sign Out</button>
                  </div>
    </div> :
        <div className="bg-gray-400 p-10 rounded-md bg-clip-padding backdrop-filter backdrop-blur-sm bg-opacity-10 border border-gray-100 shadow-lg">
          <form onSubmit={handleSubmit}>
            <div className="m-5 mb-10">
              <label htmlFor="username" className="text-center block text-sm font-medium text-white">
                Enter Username
              </label>
              <div className="p-2">
                <input
                    id="username"
                    name="username"
                    type="username"
                    className="block w-full appearance-none rounded-md border border-gray-300 px-3 py-2 placeholder-gray-400 shadow-sm focus:border-indigo-500 focus:outline-none focus:ring-indigo-500 sm:text-sm"
                    onChange={e => {setUsername(e.currentTarget.value)}}
                />
              </div>
              <label htmlFor="password" className="text-center block text-sm font-medium text-white">
                Enter Password
              </label>
              <div className="p-2">
                <input
                    id="new password"
                    name="new password"
                    type="password"
                    className="block w-full appearance-none rounded-md border border-gray-300 px-3 py-2 placeholder-gray-400 shadow-sm focus:border-indigo-500 focus:outline-none focus:ring-indigo-500 sm:text-sm"
                    onChange={e => {setPassword(e.currentTarget.value)}}
                />
              </div>
            </div>

            <div>
                  <input type="submit" value="Sign In" className="flex w-full justify-center rounded-md border border-transparent bg-indigo-600 py-2 px-4 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2"
                    ></input>
                    <ToastContainer/>
                  </div>
          </form>
        </div>
    );
};

